name: Lint and Test SDC Charts

on:
  pull_request:
    paths:
      - 'charts/sdc/**'

jobs:
  lint-test:
    runs-on: ubuntu-latest

    steps:

      - name: Clear any existing tool cache
        run: |
          mv "${{ runner.tool_cache }}" "${{ runner.tool_cache }}.old"
          mkdir -p "${{ runner.tool_cache }}"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.9.2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add jetstack https://charts.jetstack.io
          helm repo add runix https://helm.runix.net
          #helm repo add inlets oci://ghcr.io/openfaasltd
          HELM_EXPERIMENTAL_OCI=1 helm dependency update charts/sdc

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Kind cluster-info
        run: |
          kubectl cluster-info --context kind-chart-testing
          kubectl get nodes --context kind-chart-testing

      - name: Run chart-testing (install)
        run: |
          ct install --charts=charts/sdc --debug --helm-extra-set-args="--set=imageCredentials.username=${{ secrets.DOCKER_USERNAME }} \
          --set=imageCredentials.password=${{ secrets.DOCKER_PASSWORD }} \
          --set=imageCredentials.email=${{ secrets.DOCKER_EMAIL }} \
          --set=inlets.license=${{ secrets.INLETS_LICENSE }} \
          --set=clientId="SuperUser99" \
          --set=clientSecret="$uperSecret45" \
          --set=PortForward__Range="5001-5009" \
          --set=postgresql.enabled=true" --upgrade
