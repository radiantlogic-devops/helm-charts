
nodeSelector: {}
  # tenantname: xxxxx

agents:
  database:
    ConnectionStrings__AgentsDatabase: "Host=postgresql; Database=agentsdb; Username=agentsadmin; Password=xxxxx; SearchPath=agents"
    DefaultApiClient__ClientId: "xxxxx"
    DefaultApiClient__ClientSecret: "xxxxx"
    # PortForward range should match the start-end values of the tcpPorts
    PortForward__Range: "5001-5009"
  # jwtIssuer should match the url created for the ingress to sdc
  # jwtIssuer: "sdc.example.com"
  jwtIssuer: "xxxx"

tunnel:
  tunnelname: r1tunnel
  nodeSelector: {}
    # tenantname: xxxxxxx
  # Ports opened for tunnels
  # To open single ports of choice provide values under "ports:"
  # To open range of ports provide values under "portRange" like "5001-5010"
  # Provide higher + 1 for the higher limit (port) intended (for portRange)
  ports:
    - 8080
    - 8081
  portRange:
    - "5001-5010"
    - "6001-6010"

inlets:
  license: "xxxxx"
  # A router to work on a wildcard domain and to direct
  # traffic according to request domain
  clientRouter:
    # Customer tunnels will connect with a URI of:
    # wss://uplink.example.com/namespace/tunnel
    domain: uplink.example.com/namespace/tunnel

# Postgresql should be deployed prior to deployment or should be enabled from below
postgresql:
  enabled: false
