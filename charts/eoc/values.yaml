global:
  region: ""
  domainName: ""
  certificateArn: ""
  infrastructureName: ""
  nodeLimit: 10
  fidLicense: ""
  zones: 2
  amiImageId: "ami-0fe74570d87750175"
  minFidVersion: "8.0.0"
  # duploservices-{common-services-tenant}
  commonServicesNamespace: ""
  environmentNamespacePrefix: "duploservices-"
  ## Extra environment variables that will be pass onto all deployment pods
  ##
  ## env:
  ##   AWS_REGION: us-east-1
  env: {}

## Image pull secrets to used to pull the images
## Do not add under global as it is used by redis
## imagePullSecrets:
## - regcred
imagePullSecrets: []

applications:
  fid:
    minVersion: "8.0.0"
    nodeLimit: 0
  brainwave:
    minVersion: "2.0.0"
    nodeLimit: 0

features:
  mfa:
    enabled: false
    appName: "Radiant Logic EOC"

ui:
  basePath: /eoc
  # example https://{fqdm}/eoc-backend
  apiBaseUrl: ""
  auth:
    # the local storage key to store jwt token
    tokenStoreKey: token
    # example https://{fqdm}
    loginReturnUrl: ""
  # link to kibana https://{fqdm}/kibana/app/discover
  loggingUrl: ""
  # full external links to public grafana dashboard
  reportingDashboardUrl: ""
  monitoringDashboardUrl: ""
  # add a jwt Token to the grafana iFrame url
  insertMonitoringJwtToken: false
  # override infrastructure name used for environment name prefix
  infrastructureName: ""
  kibanaApiPath: /eoc-kibana/index-patterns
  amplitude:
    key: ""
  image:
    repository: radiantone/eoc-ui
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.  #
    # tag: "dev"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  initialDelaySeconds: 120
  periodSeconds: 30
  tiersVisibility: false
  multiTenantEnabled: false
  ## Extra environment variables that will be pass onto deployment pods
  ##
  ## env:
  ##   AWS_ROLE_ARN: arn:aws:iam::123456789000:role/iam-role-name-here
  ##   AWS_REGION: us-east-1
  env: {}

backend:
  basePath: eoc-backend
  redis:
    # redundant, will be removed
    bullUrl: redis://redis-headless:6379
    host: redis-headless
    port: 6379
  database:
    name: eocdb
    schema: eoc
    host: postgresql
    port: 5432
    auth:
      user: eocadmin
      pass: eocadmin
  s3BucketName: ""
  jwt:
    secret: mySecret
    expiresIn: 60m
  oauth:
    # Get them from https://console.cloud.google.com/apis/credentials
    google:
      enabled: true
      clientId: "xxxxxx"
      clientSecret: "xxxxxx"
    # Get them from https://github.com/settings/developers
    github:
      enabled: true
      clientId: "xxxxxx"
      clientSecret: "xxxxxx"
    # Get them from https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationsListBlade
    microsoft:
      enabled: true
      clientId: "xxxxxx"
      clientSecret: "xxxxxx"
    local:
      enabled: true
      mfa: false
  # mailer module
  smtp:
    from: ""
    user: saas@radiantlogic.com
    pass: password
    host: smtp-server
    port: 25
  # Initial Admin user configuration
  admin:
    email: user@example.com
    firstName: User
    lastName: Example
    password: ""
  # Default on *nix if not explicitly specified
  # APP_ROOT_DIRECTORY=${HOME}/.cloudmanager
  # Custom value (if running as a systemd service for example)
  appRootDirectory: /var/lib/cloudmanager
  # Should consist of exactly 32 chars because of the AES256 encryption algorithm usage
  # openssl rand -hex 16
  encryptionKey: 1194c5c206aa26d37091c4e6d09dc9de
  kibana:
    # https://{fqdn}/kibana/api/
    apiUrl: "hhttp://kibana:5601/eoc-backend/kibana/api/"
    basicAuth: ""
  grafana:
    host: http://grafana
    # used to create a service account for managing alerts and integrations
    # should have enough permission to be able to create a service account
    username: admin
    password: xxxx
    metricsPrefixes: ldap_,process_,push_,fid_,ia_
    basicAuth: ""
  agents:
    api:
      endpoint: ""
      clientId: ""
      clientSecret: ""
    inlets:
      token: ""
      # service name that fid uses | tunnel
      # acmeco.duploservices-rliqa-svc.svc.cluster.local
      serverName: ""
      # external websocket
      # client-router.dc.federated-identity.com/duploservices-rliqa-svc/acmeco
      serverEndpoint: ""
    client:
      accessKeyId: ""
      accessKeySecret: ""
      s3Region: "us-east-2"
      s3BucketName: "radiant-one-v8-sdc-distribution"
      version: "0.2.7"
  image:
    repository: radiantone/eoc-backend
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "dev"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  initialDelaySeconds: 120
  periodSeconds: 30
  defaultTierName: "Tier1"
  disableSequentialAppVersionUpdate: "true"
  oidcTemplates:
    - name: "OIDC"
      discoveryUrl: "https://accounts.google.com/.well-known/openid-configuration"
    - name: "Microsoft"
      discoveryUrl: "https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration"
    - name: "SalesForce"
      discoveryUrl: "https://{replace-with-your-instance}.my.salesforce.com/.well-known/openid-configuration"
    - name: "Okta"
      discoveryUrl: "https://{replace-with-your-Okta-Domain}/.well-known/openid-configuration"
    - name: "Github"
  releaseChannels:
    - name: "Official"
      url: "https://radiantlogic-devops.github.io/release-stable/index.yaml"
      isDefault: "true"
#    - name: "Beta"
#      url: "https://radiantlogic-devops.github.io/release-beta/index.yaml"
#    - name: "Nightly"
#      url: "https://radiantlogic-devops.github.io/release-nightly/index.yaml"
  tiers:
    - name: BaseTier
      asg:
        Capacity: m5a.large
        DesiredCapacity: 1
        MinSize: 0
        MaxSize: 3
        MetaData:
        - Key: OsDiskSize
          Value: 50Gi
      bwigrc:
        resources:
          limits:
            cpu: 1
            memory: 4Gi
          requests:
            cpu: 1
            memory: 4Gi
      fid:
        persistence:
          enabled: true
          size: 100Gi
          storageClass: gp3
        resources:
          limits:
            cpu: 1
            memory: 4Gi
          requests:
            cpu: 1
            memory: 4Gi
    - name: Tier1
      asg:
        Capacity: m5a.xlarge
      bwigrc:
        resources:
          limits:
            cpu: 2
            memory: 8Gi
      fid:
        persistence:
          size: 100Gi
        resources:
          limits:
            cpu: 2
            memory: 8Gi
          requests:
            cpu: 2
            memory: 8Gi
    - name: Tier2
      asg:
        Capacity: m5a.2xlarge
      bwigrc:
        resources:
          limits:
            cpu: 4
            memory: 16Gi
          requests:
            cpu: 4
            memory: 16Gi
      fid:
        persistence:
          size: 200Gi
        resources:
          limits:
            cpu: 4
            memory: 16Gi
          requests:
            cpu: 4
            memory: 16Gi
  ## Extra environment variables that will be pass onto deployment pods
  ##
  ## env:
  ##   AWS_ROLE_ARN: arn:aws:iam::123456789000:role/iam-role-name-here
  ##   AWS_REGION: us-east-1
  env: {}

orchestrator:
  duplo:
    token: ""
    baseUrl: ""
    servicesTenantName: ""
  git:
    # ssh repo url
    repo: ""
    privateKey: |
      -----BEGIN OPENSSH PRIVATE KEY-----
      {private key needs to be multi-line and indented by 6}
      -----END OPENSSH PRIVATE KEY-----
  argocd:
    baseUrl: http://argocd-server/argocd/api/v1
    token: ""
  redis:
    host: redis-headless
    port: 6379
  image:
    repository: radiantone/eoc-orchestrator
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "dev"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  initialDelaySeconds: 60
  periodSeconds: 30
  ## Extra environment variables that will be pass onto deployment pods
  ##
  ## env:
  ##   AWS_ROLE_ARN: arn:aws:iam::123456789000:role/iam-role-name-here
  ##   AWS_REGION: us-east-1
  env: {}

redis:
  enabled: true
  fullnameOverride: redis
  architecture: standalone
  auth:
    ## @param auth.enabled Enable password authentication
    ##
    enabled: false
    ## @param auth.sentinel Enable password authentication on sentinels too
    ##
    sentinel: false
  replica:
    ## @param replica.replicaCount Number of Redis&reg; replicas to deploy
    ##
    replicaCount: 0
  master:
    nodeSelector: {}
    tolerations: []
    affinity: {}

postgresql:
  enabled: false
  fullnameOverride: postgresql
  primary:
    nodeSelector: {}
      # tenantname: duploservices-ensemble-svc
    initdb:
      scripts:
        01_agents_init_script.sql: |
          CREATE DATABASE eocdb;
          CREATE USER eocadmin WITH ENCRYPTED PASSWORD 'eocadmin';
          GRANT ALL PRIVILEGES ON DATABASE eocdb TO eocadmin;
        XX_create_schema_init_script.sh: |
          #!/bin/bash
          PGPASSWORD=$POSTGRES_PASSWORD psql -v ON_ERROR_STOP=1 <<-EOSQL
            \connect eocdb;
            CREATE SCHEMA IF NOT EXISTS eoc;
            GRANT ALL ON SCHEMA eoc TO eocadmin;
          EOSQL
sss:
  enabled: true
  nodeSelector: {}
  s3:
    region: ""
    bucketName: ""
