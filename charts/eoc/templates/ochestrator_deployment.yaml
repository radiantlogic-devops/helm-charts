apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eoc-orchestrator.fullname" . }}
  labels:
    {{- include "eoc-orchestrator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "eoc-orchestrator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "eoc-orchestrator.fullname" . | nindent 8 }}
      labels:
        {{- include "eoc-orchestrator.selectorLabels" . | nindent 8 }}   
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.orchestrator.image.repository }}:{{ .Values.orchestrator.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.orchestrator.image.pullPolicy }}
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: "/var/secrets"
            name: secrets
            readOnly: true
        envFrom:
          - configMapRef:
              name: {{ template "eoc-orchestrator.fullname" . }}
        env:
{{- if not .Values.global.mountSecrets }}
  {{- if .Values.global.certificateArn }}
          - name: CERTIFICATE_ARN
            valueFrom:
              secretKeyRef:
                name: secrets-{{ template "eoc-orchestrator.fullname" . }}
                key: certificate-arn
  {{- end }}
  {{- if .Values.orchestrator.duplo.token }}
          - name: DUPLO_TOKEN
            valueFrom:
              secretKeyRef:
                name: secrets-{{ template "eoc-orchestrator.fullname" . }}
                key: duplo-token
  {{- end }}
  {{- if .Values.orchestrator.argocd.token }}
          - name: ARGO_CD_TOKEN
            valueFrom:
              secretKeyRef:
                name: secrets-{{ template "eoc-orchestrator.fullname" . }}
                key: argocd-token
  {{- end }}
  {{- if .Values.global.fidLicense }}
          - name: FID_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: secrets-{{ template "eoc-orchestrator.fullname" . }}
                key: fid-license
  {{- end }}
  {{- if .Values.orchestrator.git.privateKey }}
          - name: GIT_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                name: secrets-{{ template "eoc-orchestrator.fullname" . }}
                key: git-private-key
  {{- end }}
  {{- if .Values.backend.encryptionKey }}
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: secrets-{{ template "eoc-orchestrator.fullname" . }}
                key: encryption-key
  {{- end }}
{{- end }}
        readinessProbe:
          tcpSocket:
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 5
          successThreshold: 1
        livenessProbe:
          tcpSocket:
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 5
          successThreshold: 1
      {{- with .Values.orchestrator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.orchestrator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.orchestrator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: secrets
          secret:
            secretName: secrets-{{ template "eoc-orchestrator.fullname" . }}